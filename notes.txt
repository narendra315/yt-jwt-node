#   What is JWT
    JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting 
    information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. 
    JWTs can be signed using a secret (with the HMAC algorithm) or a public/private key pair using RSA or ECDSA.

#   When to use it


#   Structure
    xxxxx.yyyyy.zzzzz

    - header: type of token and algorithm being used, such as HMAC SHA256 or RSA.
    {
        "alg": "HS256",
        "typ": "JWT"
    }
    
    - payload: Registered, Public and Private
    
    Registered claims: These are a set of predefined claims which are not mandatory but recommended.
    example: iss (issuer), exp (expiration time), sub (subject), aud (audience), and others.

    Public claims: These can be defined at will by those using JWTs. 
    But to avoid collisions they should be defined in the IANA JSON Web Token Registry 
    or be defined as a URI that contains a collision resistant namespace.

    Private claims: These are the custom claims created to share information between parties that agree on using 
    them and are neither registered or public claims.

    {
        "sub": "1234567890",
        "name": "John Doe",
        "admin": true
    }
    
    - signature: To create the signature part you have to take the encoded header, 
    the encoded payload, a secret, the algorithm specified in the header, and sign that.

    HMACSHA256(
        base64UrlEncode(header) + "." +
        base64UrlEncode(payload),
    secret)